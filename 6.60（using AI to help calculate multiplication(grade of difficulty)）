// 6.60（using AI to help calculate multiplication(grade of difficulty)）.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//计算机辅助教学4.0，新增“自定义难度等级”功能

#include<iostream>
#include<ctime>
#include<cstdlib>
#include<string>
#include<array>
using namespace std;

int SingledigitMultiplication(int, int, int);
int SingledigitMultiplication(int a, int b, int answer)
{
	static int CorrectTimes = 0;            
	static int WrongTimes = 0;
	static int counter = 1;

	string CorrectEvaluation[4] = { "Very good!","Excellent!","Nice work!","Keep up the good work!" };         //创建数组
	string WrongEvaluation[4] = { "No. Please try again.","Wrong. Try once more.","Don't give up!","No. Keep trying!" };

	int result = a * b;
	if (answer == result)
	{
		cout << CorrectEvaluation[rand() % 4] << endl
			<< "Do you want to play again(y or n) ?" << endl;
		CorrectTimes++;
	}
	else
	{
		WrongTimes++;
		int Answer = 0;
		cout << "No try again." << endl;
		cin >> Answer;
		while (Answer != result)
		{
			cout << WrongEvaluation[rand() % 4] << endl;
			cin >> Answer;
		}
		cout << CorrectEvaluation[rand() % 4] << endl
			<< "Do you want to play again(y or n) ?" << endl;
	}
	a = 0;
	b = 0;
	result = 0;

	char response = ' ';
	cin >> response;

	if (response == 'y')
	{
		counter++;
		a = 1 + rand() % 9;
		b = 1 + rand() % 9;
		cout << "How much is " << a << " times " << b << " ?" << endl;
		cout << "Enter your answer: ";
		cin >> answer;
		if (counter == 10)
		{
			if (CorrectTimes >= 8)
			{
				cout << "Congratulations, you are ready to go to the next level!" << endl;
				return 0;
			}
			else
			{
				cout << "Please ask your teacher for extra help." << endl;
				return 0;
			}
		}
		SingledigitMultiplication(a, b, answer);
	}
	else
		return 0;
}

int TendigitMultiplication(int, int, int);
int TendigitMultiplication(int a, int b, int answer)
{
	static int CorrectTimes = 0;
	static int WrongTimes = 0;
	static int counter = 1;

	string CorrectEvaluation[4] = { "Very good!","Excellent!","Nice work!","Keep up the good work!" };         //创建数组
	string WrongEvaluation[4] = { "No. Please try again.","Wrong. Try once more.","Don't give up!","No. Keep trying!" };

	int result = a * b;
	if (answer == result)
	{
		cout << CorrectEvaluation[rand() % 4] << endl
			<< "Do you want to play again(y or n) ?" << endl;
		CorrectTimes++;
	}
	else
	{
		WrongTimes++;
		int Answer = 0;
		cout << "No try again." << endl;
		cin >> Answer;
		while (Answer != result)
		{
			cout << WrongEvaluation[rand() % 4] << endl;
			cin >> Answer;
		}
		cout << CorrectEvaluation[rand() % 4] << endl
			<< "Do you want to play again(y or n) ?" << endl;
	}
	a = 0;
	b = 0;
	result = 0;

	char response = ' ';
	cin >> response;

	if (response == 'y')
	{
		counter++;
		a = 10 + rand() % 90;
		b = 10 + rand() % 90;
		cout << "How much is " << a << " times " << b << " ?" << endl;
		cout << "Enter your answer: ";
		cin >> answer;
		if (counter == 10)
		{
			if (CorrectTimes >= 8)
			{
				cout << "Congratulations, you are ready to go to the next level!" << endl;
				return 0;
			}
			else
			{
				cout << "Please ask your teacher for extra help." << endl;
				return 0;
			}
		}
		TendigitMultiplication(a, b, answer);
	}
	else
		return 0;
}

int HundredMultiplication(int, int, int);
int HundredMultiplication(int a, int b, int answer)
{
	static int CorrectTimes = 0;
	static int WrongTimes = 0;
	static int counter = 1;

	string CorrectEvaluation[4] = { "Very good!","Excellent!","Nice work!","Keep up the good work!" };         //创建数组
	string WrongEvaluation[4] = { "No. Please try again.","Wrong. Try once more.","Don't give up!","No. Keep trying!" };

	int result = a * b;
	if (answer == result)
	{
		cout << CorrectEvaluation[rand() % 4] << endl
			<< "Do you want to play again(y or n) ?" << endl;
		CorrectTimes++;
	}
	else
	{
		WrongTimes++;
		int Answer = 0;
		cout << "No try again." << endl;
		cin >> Answer;
		while (Answer != result)
		{
			cout << WrongEvaluation[rand() % 4] << endl;
			cin >> Answer;
		}
		cout << CorrectEvaluation[rand() % 4] << endl
			<< "Do you want to play again(y or n) ?" << endl;
	}
	a = 0;
	b = 0;
	result = 0;

	char response = ' ';
	cin >> response;

	if (response == 'y')
	{
		counter++;
		a = 100 + rand() % 900;
		b = 100 + rand() % 900;
		cout << "How much is " << a << " times " << b << " ?" << endl;
		cout << "Enter your answer: ";
		cin >> answer;
		if (counter == 10)
		{
			if (CorrectTimes >= 8)
			{
				cout << "Congratulations, you are ready to go to the next level!" << endl;
				return 0;
			}
			else
			{
				cout << "Please ask your teacher for extra help." << endl;
				return 0;
			}
		}
		HundredMultiplication(a, b, answer);
	}
	else
		return 0;
}

int main()
{
	int grade = 0;
	int a = 0;
	int b = 0;
	int answer = 0;

	srand(time(NULL));
	cout << "Enter the grade of difficulty" << endl
		<< "(1 is to Single digit multiplication, " << endl
		<< "2 is to Ten digit mlutiplication, " << endl
		<< "3 is to Multiplication of hundreds): ";
	cin >> grade;
	switch (grade)
	{
	case 1:
		a = 1 + rand() % 9;
		b = 1 + rand() % 9;
		cout << "How much is " << a << " times " << b << " ?" << endl;
		cout << "Enter your answer: ";
		cin >> answer;
		SingledigitMultiplication(a, b, answer);
		break;
	case 2:
		a = 10 + rand() % 90;
		b = 10 + rand() % 90;
		cout << "How much is " << a << " times " << b << " ?" << endl;
		cout << "Enter your answer: ";
		cin >> answer;
		TendigitMultiplication(a, b, answer);
		break;
	case 3:
		a = 100 + rand() % 900;
		b = 100 + rand() % 900;
		cout << "How much is " << a << " times " << b << " ?" << endl;
		cout << "Enter your answer: ";
		cin >> answer;
		TendigitMultiplication(a, b, answer);
		break;
	default:
		break;
	}
}
